- name: Check if kudeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: output

- name: Init cluster if needed
  ansible.builtin.command: >
    kubeadm init
    --apiserver-advertise-address="{{ advertise_address }}"
    --node-name "{{ control_plane_name }}"
    --pod-network-cidr="{{ pod_network_cidr }}"
  when: not output.stat.exists
  run_once: true
  register: ini_cluster

- name: Creates Kubernetes config directory
  ansible.builtin.file:
    path: ".kube/"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  when: ini_cluster is succeeded

- name: Copy admin.conf
  when: ini_cluster is succeeded
  ansible.builtin.copy:
    src: "/etc/kubernetes/admin.conf"
    dest: ".kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
    remote_src: true

- name: Enable and check kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    state: restarted
    enabled: true
  register: started_kubelet

- name: Check if Flannel network
  ansible.builtin.shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf get ds --all-namespaces | grep flannel
  register: check_net
  ignore_errors: true
  changed_when: false

- name: Install Flannel Network
  become: false
  when: check_net is failed
  ansible.builtin.command: kubectl apply -f "{{ flannel_manifest_file }}"

- name: Generate join command
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command
  changed_when: true
